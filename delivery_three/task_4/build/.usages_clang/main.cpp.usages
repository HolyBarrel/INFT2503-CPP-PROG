22 serialization::archive 19 0 0 0 0 72 /home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4 78 /home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/build 0 0 1041 0 0 0 1 # 1 1 1 2 18446744073709551615 7 include 1 2 1 9 18446744073709551615 1 < 1 10 1 11 18446744073709551615 8 iostream 1 11 1 19 18446744073709551615 1 > 1 19 1 20 18446744073709551615 1 # 2 1 2 2 18446744073709551615 7 include 2 2 2 9 18446744073709551615 1 < 2 10 2 11 18446744073709551615 6 string 2 11 2 17 18446744073709551615 1 > 2 17 2 18 18446744073709551615 1 # 3 1 3 2 18446744073709551615 7 include 3 2 3 9 18446744073709551615 1 < 3 10 3 11 18446744073709551615 6 vector 3 11 3 17 18446744073709551615 1 > 3 17 3 18 18446744073709551615 1 # 4 1 4 2 18446744073709551615 7 include 4 2 4 9 18446744073709551615 1 < 4 10 4 11 18446744073709551615 6 limits 4 11 4 17 18446744073709551615 1 > 4 17 4 18 18446744073709551615 1 # 5 1 5 2 18446744073709551615 7 include 5 2 5 9 18446744073709551615 1 < 5 10 5 11 18446744073709551615 9 stdexcept 5 11 5 20 18446744073709551615 1 > 5 20 5 21 18446744073709551615 5 using 7 1 7 6 18446744073709551615 9 namespace 7 7 7 16 18446744073709551615 3 std 7 17 7 20 0 1 ; 7 20 7 21 18446744073709551615 8 //TASK A 9 1 9 9 18446744073709551615 6 vector 10 1 10 7 1 1 < 10 7 10 8 2 6 string 10 8 10 14 3 1 > 10 14 10 15 2 12 getUserWords 10 16 10 28 2 1 ( 10 28 10 29 2 5 const 10 29 10 34 18446744073709551615 3 int 10 35 10 38 18446744073709551615 8 numWords 10 39 10 47 4 1 ) 10 47 10 48 2 1 ; 10 48 10 49 18446744073709551615 8 //TASK B 12 1 12 9 18446744073709551615 7 //ALT 1 13 1 13 8 18446744073709551615 6 string 14 1 14 7 3 14 createSentence 14 8 14 22 5 1 ( 14 22 14 23 5 5 const 14 23 14 28 18446744073709551615 6 string 14 29 14 35 3 1 & 14 36 14 37 18446744073709551615 2 w1 14 37 14 39 6 1 , 14 39 14 40 5 5 const 14 41 14 46 18446744073709551615 6 string 14 47 14 53 3 1 & 14 54 14 55 18446744073709551615 2 w2 14 55 14 57 7 1 , 14 57 14 58 5 5 const 14 59 14 64 18446744073709551615 6 string 14 65 14 71 3 1 & 14 72 14 73 18446744073709551615 2 w3 14 73 14 75 8 1 ) 14 75 14 76 5 1 ; 14 76 14 77 18446744073709551615 7 //ALT 2 15 1 15 8 18446744073709551615 6 string 16 1 16 7 3 14 createSentence 16 8 16 22 5 1 ( 16 22 16 23 5 5 const 16 23 16 28 18446744073709551615 6 vector 16 29 16 35 1 1 < 16 35 16 36 18446744073709551615 6 string 16 36 16 42 3 1 > 16 42 16 43 18446744073709551615 1 & 16 44 16 45 18446744073709551615 7 strVect 16 45 16 52 9 1 ) 16 52 16 53 5 1 ; 16 53 16 54 18446744073709551615 8 //TASK C 18 1 18 9 18446744073709551615 7 //ALT 2 19 1 19 8 18446744073709551615 4 void 20 1 20 5 18446744073709551615 16 printWordLengths 20 6 20 22 10 1 ( 20 22 20 23 10 5 const 20 23 20 28 18446744073709551615 6 vector 20 29 20 35 1 1 < 20 35 20 36 18446744073709551615 6 string 20 36 20 42 3 1 > 20 42 20 43 18446744073709551615 1 & 20 44 20 45 18446744073709551615 7 strVect 20 45 20 52 11 1 ) 20 52 20 53 10 1 ; 20 53 20 54 18446744073709551615 8 //TASK E 22 1 22 9 18446744073709551615 6 string 23 1 23 7 3 12 xOutInterval 23 8 23 20 12 1 ( 23 20 23 21 12 6 string 23 21 23 27 3 1 & 23 28 23 29 18446744073709551615 4 word 23 29 23 33 13 1 , 23 33 23 34 12 5 const 23 35 23 40 18446744073709551615 3 int 23 41 23 44 18446744073709551615 5 start 23 45 23 50 14 1 , 23 50 23 51 12 5 const 23 52 23 57 18446744073709551615 3 int 23 58 23 61 18446744073709551615 4 stop 23 62 23 66 15 1 ) 23 66 23 67 12 1 ; 23 67 23 68 18446744073709551615 8 //TASK H 25 1 25 9 18446744073709551615 3 int 26 1 26 4 18446744073709551615 18 countWordFrequency 26 5 26 23 16 1 ( 26 23 26 24 16 5 const 26 24 26 29 18446744073709551615 6 string 26 30 26 36 3 1 & 26 37 26 38 18446744073709551615 8 sentence 26 38 26 46 17 1 , 26 46 26 47 16 5 const 26 48 26 53 18446744073709551615 6 string 26 54 26 60 3 1 & 26 61 26 62 18446744073709551615 4 word 26 62 26 66 18 1 ) 26 66 26 67 16 1 ; 26 67 26 68 18446744073709551615 3 int 28 1 28 4 18446744073709551615 4 main 28 5 28 9 19 1 ( 28 9 28 10 19 1 ) 28 10 28 11 19 1 { 29 1 29 2 18446744073709551615 5 const 30 5 30 10 18446744073709551615 3 int 30 11 30 14 18446744073709551615 9 NUM_WORDS 30 15 30 24 20 1 = 30 25 30 26 18446744073709551615 1 3 30 27 30 28 18446744073709551615 1 ; 30 28 30 29 18446744073709551615 8 //TASK A 31 5 31 13 18446744073709551615 6 vector 32 2 32 8 1 1 < 32 8 32 9 18446744073709551615 6 string 32 9 32 15 3 1 > 32 15 32 16 18446744073709551615 9 userWords 32 17 32 26 21 1 = 32 27 32 28 18446744073709551615 12 getUserWords 32 29 32 41 2 1 ( 32 41 32 42 2 9 NUM_WORDS 32 42 32 51 20 1 ) 32 51 32 52 2 1 ; 32 52 32 53 18446744073709551615 6 string 34 2 34 8 3 5 word1 34 9 34 14 22 1 = 34 15 34 16 18446744073709551615 9 userWords 34 17 34 26 21 1 [ 34 26 34 27 23 1 0 34 27 34 28 18446744073709551615 1 ] 34 28 34 29 23 1 ; 34 29 34 30 18446744073709551615 6 string 35 2 35 8 3 5 word2 35 9 35 14 24 1 = 35 15 35 16 18446744073709551615 9 userWords 35 17 35 26 21 1 [ 35 26 35 27 23 1 1 35 27 35 28 18446744073709551615 1 ] 35 28 35 29 23 1 ; 35 29 35 30 18446744073709551615 6 string 36 2 36 8 3 5 word3 36 9 36 14 25 1 = 36 15 36 16 18446744073709551615 9 userWords 36 17 36 26 21 1 [ 36 26 36 27 23 1 2 36 27 36 28 18446744073709551615 1 ] 36 28 36 29 23 1 ; 36 29 36 30 18446744073709551615 4 cout 37 2 37 6 26 2 << 37 7 37 9 27 4 endl 37 10 37 14 28 2 << 37 15 37 17 29 9 "Task A:" 37 18 37 27 18446744073709551615 2 << 37 28 37 30 27 4 endl 37 31 37 35 28 2 << 37 36 37 38 27 4 endl 37 39 37 43 28 1 ; 37 43 37 44 18446744073709551615 4 cout 38 2 38 6 26 2 << 38 7 38 9 29 9 "Word1: " 38 10 38 19 18446744073709551615 2 << 38 20 38 22 29 5 word1 38 23 38 28 22 2 << 38 29 38 31 29 11 ", Word2: " 38 32 38 43 18446744073709551615 2 << 38 44 38 46 29 5 word2 38 47 38 52 24 2 << 38 53 38 55 29 10 ", Word3:" 38 56 38 66 18446744073709551615 2 << 38 67 38 69 29 5 word3 38 70 38 75 25 2 << 38 76 38 78 27 4 endl 38 79 38 83 28 2 << 38 84 38 86 27 4 endl 38 87 38 91 28 1 ; 38 91 38 92 18446744073709551615 8 //TASK B 40 2 40 10 18446744073709551615 7 //ALT 1 41 3 41 10 18446744073709551615 6 string 42 2 42 8 3 8 sentence 42 9 42 17 30 1 = 42 18 42 19 18446744073709551615 14 createSentence 42 20 42 34 5 1 ( 42 34 42 35 5 5 word1 42 35 42 40 22 1 , 42 40 42 41 5 5 word2 42 42 42 47 24 1 , 42 47 42 48 5 5 word3 42 49 42 54 25 1 ) 42 54 42 55 5 1 ; 42 55 42 56 18446744073709551615 7 //ALT 2 44 3 44 10 18446744073709551615 6 string 45 2 45 8 3 11 sentenceAlt 45 9 45 20 31 1 = 45 21 45 22 18446744073709551615 14 createSentence 45 23 45 37 5 1 ( 45 37 45 38 5 9 userWords 45 38 45 47 21 1 ) 45 47 45 48 5 1 ; 45 48 45 49 18446744073709551615 4 cout 47 2 47 6 26 2 << 47 7 47 9 27 4 endl 47 10 47 14 28 2 << 47 15 47 17 29 9 "Task B:" 47 18 47 27 18446744073709551615 2 << 47 28 47 30 27 4 endl 47 31 47 35 28 2 << 47 36 47 38 27 4 endl 47 39 47 43 28 1 ; 47 43 47 44 18446744073709551615 4 cout 48 2 48 6 26 2 << 48 7 48 9 29 17 "Sentence(1): \n" 48 10 48 27 18446744073709551615 2 << 48 28 48 30 29 8 sentence 48 31 48 39 30 2 << 48 40 48 42 27 4 endl 48 43 48 47 28 1 ; 48 47 48 48 18446744073709551615 4 cout 49 2 49 6 26 2 << 49 7 49 9 29 17 "Sentence(2): \n" 49 10 49 27 18446744073709551615 2 << 49 28 49 30 29 11 sentenceAlt 49 31 49 42 31 2 << 49 43 49 45 27 4 endl 49 46 49 50 28 2 << 49 51 49 53 27 4 endl 49 54 49 58 28 1 ; 49 58 49 59 18446744073709551615 8 //TASK C 51 4 51 12 18446744073709551615 7 //ALT 1 52 5 52 12 18446744073709551615 4 cout 53 4 53 8 26 2 << 53 9 53 11 27 4 endl 53 12 53 16 28 2 << 53 17 53 19 29 9 "Task C:" 53 20 53 29 18446744073709551615 2 << 53 30 53 32 27 4 endl 53 33 53 37 28 2 << 53 38 53 40 27 4 endl 53 41 53 45 28 1 ; 53 45 53 46 18446744073709551615 4 cout 54 4 54 8 26 2 << 54 9 54 11 29 20 "Word-lengths for: " 54 12 54 32 18446744073709551615 2 << 54 33 54 35 27 4 endl 54 36 54 40 28 1 ; 54 40 54 41 18446744073709551615 4 cout 55 2 55 6 26 2 << 55 7 55 9 29 9 "Word1: " 55 10 55 19 18446744073709551615 2 << 55 20 55 22 27 5 word1 55 23 55 28 22 1 . 55 28 55 29 32 4 size 55 29 55 33 32 1 ( 55 33 55 34 32 1 ) 55 34 55 35 32 2 << 55 36 55 38 29 11 ", Word2: " 55 39 55 50 18446744073709551615 2 << 55 51 55 53 27 5 word2 55 54 55 59 24 1 . 55 59 55 60 32 4 size 55 60 55 64 32 1 ( 55 64 55 65 32 1 ) 55 65 55 66 32 2 << 55 67 55 69 29 10 ", Word3:" 55 70 55 80 18446744073709551615 2 << 55 81 55 83 27 5 word3 55 84 55 89 25 1 . 55 89 55 90 32 4 size 55 90 55 94 32 1 ( 55 94 55 95 32 1 ) 55 95 55 96 32 2 << 55 97 55 99 27 4 endl 55 100 55 104 28 2 << 55 105 55 107 27 4 endl 55 108 55 112 28 1 ; 55 112 55 113 18446744073709551615 7 //ALT 2 57 3 57 10 18446744073709551615 16 printWordLengths 58 2 58 18 10 1 ( 58 18 58 19 10 9 userWords 58 19 58 28 21 1 ) 58 28 58 29 10 1 ; 58 29 58 30 18446744073709551615 8 //TASK D 60 2 60 10 18446744073709551615 6 string 61 2 61 8 3 9 sentence2 61 9 61 18 33 1 = 61 19 61 20 18446744073709551615 8 sentence 61 21 61 29 30 1 ; 61 29 61 30 18446744073709551615 8 //TASK E 63 2 63 10 18446744073709551615 4 cout 64 2 64 6 26 2 << 64 7 64 9 27 4 endl 64 10 64 14 28 2 << 64 15 64 17 29 9 "Task E:" 64 18 64 27 18446744073709551615 2 << 64 28 64 30 27 4 endl 64 31 64 35 28 2 << 64 36 64 38 27 4 endl 64 39 64 43 28 1 ; 64 43 64 44 18446744073709551615 3 try 65 2 65 5 18446744073709551615 1 { 66 2 66 3 18446744073709551615 9 sentence2 67 5 67 14 33 1 = 67 15 67 16 34 12 xOutInterval 67 17 67 29 12 1 ( 67 29 67 30 12 9 sentence2 67 30 67 39 33 1 , 67 39 67 40 12 1 9 67 41 67 42 18446744073709551615 1 , 67 42 67 43 12 2 11 67 44 67 46 18446744073709551615 1 ) 67 46 67 47 12 1 ; 67 47 67 48 18446744073709551615 4 cout 68 4 68 8 26 2 << 68 9 68 11 29 19 "Sentence normal: " 68 12 68 31 18446744073709551615 2 << 68 32 68 34 29 8 sentence 68 35 68 43 30 2 << 68 44 68 46 27 4 endl 68 47 68 51 28 1 ; 68 51 68 52 18446744073709551615 4 cout 69 4 69 8 26 2 << 69 9 69 11 29 22 "Sentence2 X-ed out: " 69 12 69 34 18446744073709551615 2 << 69 35 69 37 29 9 sentence2 69 38 69 47 33 2 << 69 48 69 50 27 4 endl 69 51 69 55 28 1 ; 69 55 69 56 18446744073709551615 1 } 70 2 70 3 18446744073709551615 5 catch 71 2 71 7 18446744073709551615 1 ( 71 8 71 9 18446744073709551615 5 const 71 9 71 14 18446744073709551615 12 out_of_range 71 15 71 27 35 1 & 71 27 71 28 18446744073709551615 3 err 71 29 71 32 36 1 ) 71 32 71 33 18446744073709551615 1 { 72 2 72 3 18446744073709551615 4 cerr 73 6 73 10 37 2 << 73 11 73 13 29 18 "Out_of_range: \n" 73 14 73 32 18446744073709551615 2 << 73 33 73 35 29 3 err 73 36 73 39 36 1 . 73 39 73 40 38 4 what 73 40 73 44 38 1 ( 73 44 73 45 38 1 ) 73 45 73 46 38 2 << 73 47 73 49 27 4 endl 73 50 73 54 28 1 ; 73 54 73 55 18446744073709551615 1 } 74 2 74 3 18446744073709551615 5 catch 75 5 75 10 18446744073709551615 1 ( 75 11 75 12 18446744073709551615 5 const 75 12 75 17 18446744073709551615 16 invalid_argument 75 18 75 34 39 1 & 75 34 75 35 18446744073709551615 3 err 75 36 75 39 40 1 ) 75 39 75 40 18446744073709551615 1 { 76 5 76 6 18446744073709551615 4 cerr 77 9 77 13 37 2 << 77 14 77 16 29 22 "Invalid argument: \n" 77 17 77 39 18446744073709551615 2 << 77 40 77 42 29 3 err 77 43 77 46 40 1 . 77 46 77 47 38 4 what 77 47 77 51 38 1 ( 77 51 77 52 38 1 ) 77 52 77 53 38 2 << 77 54 77 56 27 4 endl 77 57 77 61 28 1 ; 77 61 77 62 18446744073709551615 1 } 78 5 78 6 18446744073709551615 8 //TASK F 81 5 81 13 18446744073709551615 4 cout 82 5 82 9 26 2 << 82 10 82 12 27 4 endl 82 13 82 17 28 2 << 82 18 82 20 29 9 "Task F:" 82 21 82 30 18446744073709551615 2 << 82 31 82 33 27 4 endl 82 34 82 38 28 2 << 82 39 82 41 27 4 endl 82 42 82 46 28 1 ; 82 46 82 47 18446744073709551615 6 string 83 5 83 11 3 14 sentence_start 83 12 83 26 41 1 = 83 27 83 28 18446744073709551615 2 "" 83 29 83 31 18446744073709551615 1 ; 83 31 83 32 18446744073709551615 2 if 84 5 84 7 18446744073709551615 1 ( 84 7 84 8 18446744073709551615 8 sentence 84 8 84 16 30 1 . 84 16 84 17 32 4 size 84 17 84 21 32 1 ( 84 21 84 22 32 1 ) 84 22 84 23 32 2 >= 84 24 84 26 18446744073709551615 1 5 84 27 84 28 18446744073709551615 1 ) 84 28 84 29 18446744073709551615 1 { 85 5 85 6 18446744073709551615 14 sentence_start 86 7 86 21 41 1 = 86 22 86 23 34 8 sentence 86 24 86 32 30 1 . 86 32 86 33 42 6 substr 86 33 86 39 42 1 ( 86 39 86 40 42 1 0 86 40 86 41 18446744073709551615 1 , 86 41 86 42 42 1 5 86 42 86 43 18446744073709551615 1 ) 86 43 86 44 42 1 ; 86 44 86 45 18446744073709551615 1 } 87 5 87 6 18446744073709551615 4 else 88 5 88 9 18446744073709551615 1 { 89 5 89 6 18446744073709551615 4 cout 90 7 90 11 26 2 << 90 12 90 14 29 98 "The sentence was too short to fetch the first 5 characters, fetched as many as possible instead." 90 15 90 113 18446744073709551615 2 << 90 114 90 116 27 4 endl 90 117 90 121 28 1 ; 90 121 90 122 18446744073709551615 14 sentence_start 91 7 91 21 41 1 = 91 22 91 23 34 8 sentence 91 24 91 32 30 1 . 91 32 91 33 42 6 substr 91 33 91 39 42 1 ( 91 39 91 40 42 1 0 91 40 91 41 18446744073709551615 1 , 91 41 91 42 42 8 sentence 91 43 91 51 30 1 . 91 51 91 52 32 4 size 91 52 91 56 32 1 ( 91 56 91 57 32 1 ) 91 57 91 58 32 1 ) 91 58 91 59 42 1 ; 91 59 91 60 18446744073709551615 1 } 93 5 93 6 18446744073709551615 4 cout 95 5 95 9 26 2 << 95 10 95 12 29 12 "Sentence: " 95 13 95 25 18446744073709551615 2 << 95 26 95 28 29 8 sentence 95 29 95 37 30 2 << 95 38 95 40 27 4 endl 95 41 95 45 28 1 ; 95 45 95 46 18446744073709551615 4 cout 96 5 96 9 26 2 << 96 10 96 12 29 18 "Sentence-start: " 96 13 96 31 18446744073709551615 2 << 96 32 96 34 29 14 sentence_start 96 35 96 49 41 2 << 96 50 96 52 27 4 endl 96 53 96 57 28 1 ; 96 57 96 58 18446744073709551615 8 //TASK G 98 5 98 13 18446744073709551615 4 cout 99 5 99 9 26 2 << 99 10 99 12 27 4 endl 99 13 99 17 28 2 << 99 18 99 20 29 9 "Task G:" 99 21 99 30 18446744073709551615 2 << 99 31 99 33 27 4 endl 99 34 99 38 28 2 << 99 39 99 41 27 4 endl 99 42 99 46 28 1 ; 99 46 99 47 18446744073709551615 6 string 100 5 100 11 3 5 hallo 100 12 100 17 43 1 = 100 18 100 19 18446744073709551615 7 "hallo" 100 20 100 27 18446744073709551615 1 ; 100 27 100 28 18446744073709551615 4 bool 101 5 101 9 18446744073709551615 13 containsHallo 101 10 101 23 44 1 = 101 24 101 25 18446744073709551615 8 sentence 101 26 101 34 30 1 . 101 34 101 35 45 4 find 101 35 101 39 45 1 ( 101 39 101 40 45 5 hallo 101 40 101 45 43 1 ) 101 45 101 46 45 2 != 101 47 101 49 18446744073709551615 6 string 101 50 101 56 3 2 :: 101 56 101 58 18446744073709551615 4 npos 101 58 101 62 46 1 ; 101 62 101 63 18446744073709551615 4 cout 103 4 103 8 26 2 << 103 9 103 11 27 9 boolalpha 103 12 103 21 47 2 << 103 22 103 24 29 19 "Does the string '" 103 25 103 44 18446744073709551615 2 << 103 45 103 47 29 8 sentence 103 48 103 56 30 2 << 103 57 103 59 29 12 "' contain " 103 60 103 72 18446744073709551615 2 << 103 73 103 75 29 5 hallo 103 76 103 81 43 2 << 103 82 103 84 29 3 "?" 103 85 103 88 18446744073709551615 2 << 103 89 103 91 27 4 endl 103 92 103 96 28 2 << 104 4 104 6 27 13 containsHallo 104 7 104 20 44 2 << 104 21 104 23 27 4 endl 104 24 104 28 28 1 ; 104 28 104 29 18446744073709551615 8 //TASK H 106 4 106 12 18446744073709551615 4 cout 107 5 107 9 26 2 << 107 10 107 12 27 4 endl 107 13 107 17 28 2 << 107 18 107 20 29 9 "Task H:" 107 21 107 30 18446744073709551615 2 << 107 31 107 33 27 4 endl 107 34 107 38 28 2 << 107 39 107 41 27 4 endl 107 42 107 46 28 1 ; 107 46 107 47 18446744073709551615 3 int 108 4 108 7 18446744073709551615 7 countEr 108 8 108 15 48 1 = 108 16 108 17 18446744073709551615 18 countWordFrequency 108 18 108 36 16 1 ( 108 36 108 37 16 8 sentence 108 37 108 45 30 1 , 108 45 108 46 16 4 "er" 108 46 108 50 18446744073709551615 1 ) 108 50 108 51 16 1 ; 108 51 108 52 18446744073709551615 4 cout 110 4 110 8 26 2 << 110 9 110 11 29 19 "The sentence is: " 110 12 110 31 18446744073709551615 2 << 110 32 110 34 29 8 sentence 110 35 110 43 30 2 << 110 44 110 46 27 4 endl 110 47 110 51 28 1 ; 110 51 110 52 18446744073709551615 4 cout 112 4 112 8 26 2 << 112 9 112 11 29 34 "The number of 'er' occurrences: " 112 12 112 46 18446744073709551615 2 << 112 47 112 49 27 7 countEr 112 50 112 57 48 2 << 112 58 112 60 27 4 endl 112 61 112 65 28 1 ; 112 65 112 66 18446744073709551615 6 return 114 2 114 8 18446744073709551615 1 0 114 9 114 10 18446744073709551615 1 ; 114 10 114 11 18446744073709551615 1 } 115 1 115 2 18446744073709551615 8 //TASK A 118 1 118 9 18446744073709551615 6 vector 119 1 119 7 1 1 < 119 7 119 8 2 6 string 119 8 119 14 3 1 > 119 14 119 15 2 12 getUserWords 119 16 119 28 2 1 ( 119 28 119 29 2 5 const 119 29 119 34 18446744073709551615 3 int 119 35 119 38 18446744073709551615 8 numWords 119 39 119 47 49 1 ) 119 47 119 48 2 1 { 120 1 120 2 18446744073709551615 4 cout 122 2 122 6 26 2 << 122 7 122 9 29 15 "Please enter " 122 10 122 25 18446744073709551615 2 << 122 26 122 28 27 8 numWords 122 29 122 37 49 2 << 122 38 122 40 29 21 " words, one by one:" 122 41 122 62 18446744073709551615 2 << 122 63 122 65 27 4 endl 122 66 122 70 28 1 ; 122 70 122 71 18446744073709551615 3 int 123 2 123 5 18446744073709551615 13 wordsReceived 123 6 123 19 50 1 = 123 20 123 21 18446744073709551615 1 0 123 22 123 23 18446744073709551615 1 ; 123 23 123 24 18446744073709551615 6 vector 124 2 124 8 1 1 < 124 8 124 9 18446744073709551615 6 string 124 9 124 15 3 1 > 124 15 124 16 18446744073709551615 5 words 124 17 124 22 51 1 ; 124 22 124 23 18446744073709551615 5 while 127 5 127 10 18446744073709551615 1 ( 127 11 127 12 18446744073709551615 13 wordsReceived 127 12 127 25 50 1 < 127 26 127 27 18446744073709551615 8 numWords 127 28 127 36 49 1 ) 127 36 127 37 18446744073709551615 1 { 128 5 128 6 18446744073709551615 6 string 129 7 129 13 3 4 word 129 14 129 18 52 1 ; 129 18 129 19 18446744073709551615 7 getline 130 7 130 14 53 1 ( 130 14 130 15 53 3 cin 130 15 130 18 54 1 , 130 18 130 19 53 4 word 130 20 130 24 52 1 ) 130 24 130 25 53 1 ; 130 25 130 26 18446744073709551615 2 if 132 7 132 9 18446744073709551615 1 ( 132 10 132 11 18446744073709551615 3 cin 132 11 132 14 54 1 . 132 14 132 15 55 4 fail 132 15 132 19 55 1 ( 132 19 132 20 55 1 ) 132 20 132 21 55 1 ) 132 21 132 22 18446744073709551615 1 { 133 7 133 8 18446744073709551615 3 cin 134 11 134 14 54 1 . 134 14 134 15 56 5 clear 134 15 134 20 56 1 ( 134 20 134 21 56 1 ) 134 21 134 22 56 1 ; 134 22 134 23 18446744073709551615 3 cin 135 7 135 10 54 1 . 135 10 135 11 57 6 ignore 135 11 135 17 57 1 ( 135 17 135 18 57 14 numeric_limits 135 18 135 32 58 1 < 135 32 135 33 59 10 streamsize 135 33 135 43 60 1 > 135 43 135 44 59 2 :: 135 44 135 46 59 3 max 135 46 135 49 59 1 ( 135 49 135 50 59 1 ) 135 50 135 51 59 1 , 135 51 135 52 57 4 '\n' 135 53 135 57 18446744073709551615 1 ) 135 57 135 58 57 1 ; 135 58 135 59 18446744073709551615 8 continue 136 7 136 15 18446744073709551615 1 ; 136 15 136 16 18446744073709551615 1 } 137 7 137 8 18446744073709551615 4 else 138 7 138 11 18446744073709551615 1 { 138 12 138 13 18446744073709551615 5 words 139 9 139 14 51 1 . 139 14 139 15 61 12 emplace_back 139 15 139 27 61 1 ( 139 27 139 28 61 4 word 139 28 139 32 52 1 ) 139 32 139 33 61 1 ; 139 33 139 34 18446744073709551615 13 wordsReceived 140 9 140 22 50 2 ++ 140 22 140 24 18446744073709551615 1 ; 140 24 140 25 18446744073709551615 1 } 141 7 141 8 18446744073709551615 1 } 142 5 142 6 18446744073709551615 6 return 144 5 144 11 18446744073709551615 5 words 144 12 144 17 51 1 ; 144 17 144 18 18446744073709551615 1 } 145 1 145 2 18446744073709551615 8 //TASK B 147 1 147 9 18446744073709551615 7 //ALT 1 148 2 148 9 18446744073709551615 6 string 149 1 149 7 3 14 createSentence 149 8 149 22 5 1 ( 149 22 149 23 5 5 const 149 23 149 28 18446744073709551615 6 string 149 29 149 35 3 1 & 149 36 149 37 18446744073709551615 2 w1 149 37 149 39 62 1 , 149 39 149 40 5 5 const 149 41 149 46 18446744073709551615 6 string 149 47 149 53 3 1 & 149 54 149 55 18446744073709551615 2 w2 149 55 149 57 63 1 , 149 57 149 58 5 5 const 149 59 149 64 18446744073709551615 6 string 149 65 149 71 3 1 & 149 72 149 73 18446744073709551615 2 w3 149 73 149 75 64 1 ) 149 75 149 76 5 1 { 150 1 150 2 18446744073709551615 6 return 151 3 151 9 18446744073709551615 2 w1 151 10 151 12 62 1 + 151 13 151 14 65 3 " " 151 15 151 18 18446744073709551615 1 + 151 19 151 20 65 2 w2 151 21 151 23 63 1 + 151 24 151 25 65 3 " " 151 26 151 29 18446744073709551615 1 + 151 30 151 31 65 2 w3 151 32 151 34 64 1 + 151 35 151 36 65 3 "." 151 37 151 40 18446744073709551615 1 ; 151 40 151 41 18446744073709551615 1 } 152 1 152 2 18446744073709551615 7 //ALT 2 154 2 154 9 18446744073709551615 6 string 155 1 155 7 3 14 createSentence 155 8 155 22 5 1 ( 155 22 155 23 5 5 const 155 23 155 28 18446744073709551615 6 vector 155 29 155 35 1 1 < 155 35 155 36 18446744073709551615 6 string 155 36 155 42 3 1 > 155 42 155 43 18446744073709551615 1 & 155 44 155 45 18446744073709551615 7 strVect 155 45 155 52 66 1 ) 155 52 155 53 5 1 { 155 53 155 54 18446744073709551615 6 string 156 3 156 9 3 8 sentence 156 10 156 18 67 1 ; 156 18 156 19 18446744073709551615 3 int 157 3 157 6 18446744073709551615 5 count 157 7 157 12 68 1 = 157 13 157 14 18446744073709551615 1 0 157 15 157 16 18446744073709551615 1 ; 157 16 157 17 18446744073709551615 3 for 158 3 158 6 18446744073709551615 1 ( 158 7 158 8 18446744073709551615 4 auto 158 8 158 12 18446744073709551615 3 str 158 13 158 16 69 1 : 158 17 158 18 70 7 strVect 158 19 158 26 66 1 ) 158 26 158 27 18446744073709551615 1 { 159 3 159 4 18446744073709551615 2 if 160 5 160 7 18446744073709551615 1 ( 160 7 160 8 18446744073709551615 5 count 160 8 160 13 68 2 != 160 14 160 16 18446744073709551615 1 0 160 17 160 18 18446744073709551615 1 ) 160 18 160 19 18446744073709551615 8 sentence 160 20 160 28 67 2 += 160 29 160 31 71 3 " " 160 32 160 35 18446744073709551615 1 ; 160 35 160 36 18446744073709551615 8 sentence 161 5 161 13 67 2 += 161 14 161 16 71 3 str 161 16 161 19 69 1 ; 161 19 161 20 18446744073709551615 5 count 162 5 162 10 68 2 ++ 162 11 162 13 18446744073709551615 1 ; 162 13 162 14 18446744073709551615 1 } 163 3 163 4 18446744073709551615 8 sentence 164 3 164 11 67 2 += 164 12 164 14 71 3 "." 164 15 164 18 18446744073709551615 1 ; 164 18 164 19 18446744073709551615 6 return 165 3 165 9 18446744073709551615 8 sentence 165 10 165 18 67 1 ; 165 18 165 19 18446744073709551615 1 } 166 1 166 2 18446744073709551615 8 //TASK C 169 1 169 9 18446744073709551615 7 //ALT 2 170 2 170 9 18446744073709551615 4 void 171 1 171 5 18446744073709551615 16 printWordLengths 171 6 171 22 10 1 ( 171 22 171 23 10 5 const 171 23 171 28 18446744073709551615 6 vector 171 29 171 35 1 1 < 171 35 171 36 18446744073709551615 6 string 171 36 171 42 3 1 > 171 42 171 43 18446744073709551615 1 & 171 44 171 45 18446744073709551615 7 strVect 171 45 171 52 72 1 ) 171 52 171 53 10 1 { 172 1 172 2 18446744073709551615 3 for 173 3 173 6 18446744073709551615 1 ( 173 7 173 8 18446744073709551615 6 size_t 173 8 173 14 73 1 i 173 15 173 16 74 1 = 173 17 173 18 18446744073709551615 1 0 173 19 173 20 18446744073709551615 1 ; 173 20 173 21 18446744073709551615 1 i 173 22 173 23 74 1 < 173 24 173 25 18446744073709551615 7 strVect 173 26 173 33 72 1 . 173 33 173 34 75 4 size 173 34 173 38 75 1 ( 173 38 173 39 75 1 ) 173 39 173 40 75 1 ; 173 40 173 41 18446744073709551615 1 i 173 42 173 43 74 2 ++ 173 43 173 45 18446744073709551615 1 ) 173 45 173 46 18446744073709551615 1 { 174 3 174 4 18446744073709551615 4 cout 175 2 175 6 26 2 << 175 7 175 9 29 8 "\nWord" 175 10 175 18 18446744073709551615 2 << 175 19 175 21 27 1 i 175 22 175 23 74 2 << 175 24 175 26 29 4 ": " 175 27 175 31 18446744073709551615 2 << 175 31 175 33 27 7 strVect 175 34 175 41 72 1 [ 175 41 175 42 23 1 i 175 42 175 43 74 1 ] 175 43 175 44 23 1 . 175 44 175 45 32 4 size 175 45 175 49 32 1 ( 175 49 175 50 32 1 ) 175 50 175 51 32 2 << 175 52 175 54 27 4 endl 175 55 175 59 28 1 ; 175 59 175 60 18446744073709551615 1 } 176 3 176 4 18446744073709551615 1 } 177 1 177 2 18446744073709551615 8 //TASK E 179 1 179 9 18446744073709551615 6 string 180 1 180 7 3 12 xOutInterval 180 8 180 20 12 1 ( 180 20 180 21 12 6 string 180 21 180 27 3 1 & 180 28 180 29 18446744073709551615 4 word 180 29 180 33 76 1 , 180 33 180 34 12 5 const 180 35 180 40 18446744073709551615 3 int 180 41 180 44 18446744073709551615 5 start 180 45 180 50 77 1 , 180 50 180 51 12 5 const 180 52 180 57 18446744073709551615 3 int 180 58 180 61 18446744073709551615 4 stop 180 62 180 66 78 1 ) 180 66 180 67 12 1 { 181 1 181 2 18446744073709551615 2 if 182 3 182 5 18446744073709551615 1 ( 182 5 182 6 18446744073709551615 5 start 182 6 182 11 77 1 < 182 12 182 13 18446744073709551615 1 0 182 14 182 15 18446744073709551615 2 || 182 16 182 18 18446744073709551615 4 stop 182 19 182 23 78 1 < 182 24 182 25 18446744073709551615 1 0 182 26 182 27 18446744073709551615 1 ) 182 27 182 28 18446744073709551615 5 throw 182 29 182 34 18446744073709551615 12 out_of_range 182 35 182 47 35 1 ( 182 47 182 48 35 57 "The input for the start and stop indexes where negative" 182 48 182 105 18446744073709551615 1 ) 182 105 182 106 35 1 ; 182 106 182 107 18446744073709551615 3 int 183 3 183 6 18446744073709551615 6 length 183 7 183 13 79 1 = 183 14 183 15 18446744073709551615 4 word 183 16 183 20 76 1 . 183 20 183 21 32 4 size 183 21 183 25 32 1 ( 183 25 183 26 32 1 ) 183 26 183 27 32 1 ; 183 27 183 28 18446744073709551615 2 if 184 3 184 5 18446744073709551615 1 ( 184 5 184 6 18446744073709551615 5 start 184 6 184 11 77 1 > 184 12 184 13 18446744073709551615 6 length 184 14 184 20 79 1 - 184 21 184 22 18446744073709551615 1 1 184 23 184 24 18446744073709551615 2 || 184 25 184 27 18446744073709551615 4 stop 184 28 184 32 78 1 > 184 33 184 34 18446744073709551615 6 length 184 35 184 41 79 1 - 184 42 184 43 18446744073709551615 1 1 184 43 184 44 18446744073709551615 1 ) 184 44 184 45 18446744073709551615 5 throw 184 46 184 51 18446744073709551615 12 out_of_range 184 52 184 64 35 1 ( 184 64 184 65 35 38 "One of the indexes were out of range" 184 65 184 103 18446744073709551615 1 ) 184 103 184 104 35 1 ; 184 104 184 105 18446744073709551615 2 if 185 3 185 5 18446744073709551615 1 ( 185 5 185 6 18446744073709551615 5 start 185 6 185 11 77 1 > 185 12 185 13 18446744073709551615 4 stop 185 14 185 18 78 1 ) 185 18 185 19 18446744073709551615 5 throw 185 20 185 25 18446744073709551615 16 invalid_argument 185 26 185 42 39 1 ( 185 42 185 43 39 49 "The start index was greater than the stop index" 185 43 185 92 18446744073709551615 1 ) 185 92 185 93 39 1 ; 185 93 185 94 18446744073709551615 3 for 187 3 187 6 18446744073709551615 1 ( 187 6 187 7 18446744073709551615 3 int 187 7 187 10 18446744073709551615 1 i 187 11 187 12 80 1 = 187 13 187 14 18446744073709551615 5 start 187 15 187 20 77 1 ; 187 20 187 21 18446744073709551615 1 i 187 22 187 23 80 2 <= 187 24 187 26 18446744073709551615 4 stop 187 27 187 31 78 1 ; 187 31 187 32 18446744073709551615 1 i 187 33 187 34 80 2 ++ 187 34 187 36 18446744073709551615 1 ) 187 36 187 37 18446744073709551615 1 { 188 3 188 4 18446744073709551615 4 word 189 5 189 9 76 1 [ 189 9 189 10 81 1 i 189 10 189 11 80 1 ] 189 11 189 12 81 1 = 189 13 189 14 18446744073709551615 3 'x' 189 15 189 18 18446744073709551615 1 ; 189 18 189 19 18446744073709551615 1 } 190 3 190 4 18446744073709551615 6 return 192 3 192 9 18446744073709551615 4 word 192 10 192 14 76 1 ; 192 14 192 15 18446744073709551615 1 } 194 1 194 2 18446744073709551615 8 //TASK H 196 1 196 9 18446744073709551615 3 int 197 1 197 4 18446744073709551615 18 countWordFrequency 197 5 197 23 16 1 ( 197 23 197 24 16 5 const 197 24 197 29 18446744073709551615 6 string 197 30 197 36 3 1 & 197 37 197 38 18446744073709551615 8 sentence 197 38 197 46 82 1 , 197 46 197 47 16 5 const 197 48 197 53 18446744073709551615 6 string 197 54 197 60 3 1 & 197 61 197 62 18446744073709551615 4 word 197 62 197 66 83 1 ) 197 66 197 67 16 1 { 198 1 198 2 18446744073709551615 3 int 199 3 199 6 18446744073709551615 11 sentenceLen 199 7 199 18 84 1 = 199 19 199 20 18446744073709551615 8 sentence 199 21 199 29 82 1 . 199 29 199 30 32 4 size 199 30 199 34 32 1 ( 199 34 199 35 32 1 ) 199 35 199 36 32 1 ; 199 36 199 37 18446744073709551615 3 int 200 3 200 6 18446744073709551615 7 wordLen 200 7 200 14 85 1 = 200 15 200 16 18446744073709551615 4 word 200 17 200 21 83 1 . 200 21 200 22 32 4 size 200 22 200 26 32 1 ( 200 26 200 27 32 1 ) 200 27 200 28 32 1 ; 200 28 200 29 18446744073709551615 3 int 201 3 201 6 18446744073709551615 10 matchCount 201 7 201 17 86 1 = 201 18 201 19 18446744073709551615 1 0 201 20 201 21 18446744073709551615 1 ; 201 21 201 22 18446744073709551615 3 for 202 3 202 6 18446744073709551615 1 ( 202 6 202 7 18446744073709551615 3 int 202 7 202 10 18446744073709551615 1 i 202 11 202 12 87 1 = 202 13 202 14 18446744073709551615 1 0 202 15 202 16 18446744073709551615 1 ; 202 16 202 17 18446744073709551615 1 i 202 18 202 19 87 1 < 202 20 202 21 18446744073709551615 11 sentenceLen 202 22 202 33 84 1 ; 202 33 202 34 18446744073709551615 1 i 202 35 202 36 87 2 ++ 202 36 202 38 18446744073709551615 1 ) 202 38 202 39 18446744073709551615 1 { 203 3 203 4 18446744073709551615 2 if 204 5 204 7 18446744073709551615 1 ( 204 7 204 8 18446744073709551615 8 sentence 204 8 204 16 82 1 [ 204 16 204 17 81 1 i 204 17 204 18 87 1 ] 204 18 204 19 81 2 == 204 20 204 22 18446744073709551615 4 word 204 23 204 27 83 1 [ 204 27 204 28 81 1 0 204 28 204 29 18446744073709551615 1 ] 204 29 204 30 81 1 ) 204 30 204 31 18446744073709551615 1 { 205 5 205 6 18446744073709551615 2 if 206 7 206 9 18446744073709551615 1 ( 206 9 206 10 18446744073709551615 1 i 206 10 206 11 87 1 + 206 12 206 13 18446744073709551615 7 wordLen 206 14 206 21 85 1 > 206 22 206 23 18446744073709551615 11 sentenceLen 206 24 206 35 84 1 ) 206 35 206 36 18446744073709551615 1 { 206 37 206 38 18446744073709551615 8 continue 207 9 207 17 18446744073709551615 1 ; 207 17 207 18 18446744073709551615 1 } 208 7 208 8 18446744073709551615 4 bool 209 7 209 11 18446744073709551615 5 match 209 12 209 17 88 1 = 209 18 209 19 18446744073709551615 4 true 209 20 209 24 18446744073709551615 1 ; 209 24 209 25 18446744073709551615 3 for 210 7 210 10 18446744073709551615 1 ( 210 10 210 11 18446744073709551615 3 int 210 11 210 14 18446744073709551615 1 j 210 15 210 16 89 1 = 210 17 210 18 18446744073709551615 1 0 210 19 210 20 18446744073709551615 1 ; 210 20 210 21 18446744073709551615 1 j 210 22 210 23 89 1 < 210 24 210 25 18446744073709551615 7 wordLen 210 26 210 33 85 1 ; 210 33 210 34 18446744073709551615 1 j 210 35 210 36 89 2 ++ 210 36 210 38 18446744073709551615 1 ) 210 38 210 39 18446744073709551615 1 { 211 7 211 8 18446744073709551615 2 if 212 9 212 11 18446744073709551615 1 ( 212 11 212 12 18446744073709551615 8 sentence 212 12 212 20 82 1 [ 212 20 212 21 81 1 i 212 21 212 22 87 1 + 212 22 212 23 18446744073709551615 1 j 212 23 212 24 89 1 ] 212 24 212 25 81 2 != 212 26 212 28 18446744073709551615 4 word 212 29 212 33 83 1 [ 212 33 212 34 81 1 j 212 34 212 35 89 1 ] 212 35 212 36 81 1 ) 212 36 212 37 18446744073709551615 1 { 213 9 213 10 18446744073709551615 5 match 214 11 214 16 88 1 = 214 17 214 18 18446744073709551615 5 false 214 19 214 24 18446744073709551615 1 ; 214 24 214 25 18446744073709551615 5 break 215 11 215 16 18446744073709551615 1 ; 215 16 215 17 18446744073709551615 1 } 216 9 216 10 18446744073709551615 1 } 217 7 217 8 18446744073709551615 2 if 218 7 218 9 18446744073709551615 1 ( 218 9 218 10 18446744073709551615 5 match 218 10 218 15 88 1 ) 218 15 218 16 18446744073709551615 10 matchCount 218 17 218 27 86 2 ++ 218 27 218 29 18446744073709551615 1 ; 218 29 218 30 18446744073709551615 1 } 219 5 219 6 18446744073709551615 1 } 220 3 220 4 18446744073709551615 6 return 221 3 221 9 18446744073709551615 10 matchCount 221 10 221 20 86 1 ; 221 20 221 21 18446744073709551615 1 } 222 1 222 2 18446744073709551615 0 0 90 0 0 0 22 0 0 1 13 0 3 std 31 1 13 0 10 vector:std 8 1 13 0 12 getUserWords 20 1 13 0 10 string:std 10 1 13 0 87 10:39:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 8 1 13 0 14 createSentence 10 1 13 0 87 14:37:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 10 1 13 0 87 14:55:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 10 1 13 0 87 14:73:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 10 1 13 0 87 16:45:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 8 1 13 0 16 printWordLengths 10 1 13 0 87 20:45:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 8 1 13 0 12 xOutInterval 10 1 13 0 87 23:29:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 10 1 13 0 87 23:45:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 10 1 13 0 87 23:62:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 8 1 13 0 18 countWordFrequency 10 1 13 0 87 26:38:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 10 1 13 0 87 26:62:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 8 1 13 0 4 main 9 1 13 0 87 30:15:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 9 1 13 0 87 32:17:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 9 1 13 0 86 34:9:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 21 1 13 0 21 operator[]:vector:std 9 1 13 0 86 35:9:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 9 1 13 0 86 36:9:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 9 1 13 0 8 cout:std 21 1 13 0 26 operator:basic_ostream:std 8 1 13 0 8 endl:std 8 1 13 0 12 operator:std 9 1 13 0 86 42:9:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 9 1 13 0 86 45:9:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 21 1 13 0 29 size:basic_string:__cxx11:std 9 1 13 0 86 61:9:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 21 1 13 0 34 operator=:basic_string:__cxx11:std 4 1 13 0 16 out_of_range:std 9 1 13 0 87 71:29:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 9 1 13 0 8 cerr:std 21 2 13 0 18 what:exception:std 20 what:logic_error:std 4 1 13 0 20 invalid_argument:std 9 1 13 0 87 75:36:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 9 1 13 0 87 83:12:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 21 1 13 0 31 substr:basic_string:__cxx11:std 9 1 13 0 88 100:12:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 9 1 13 0 88 101:10:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 21 1 13 0 29 find:basic_string:__cxx11:std 9 1 13 0 29 npos:basic_string:__cxx11:std 8 1 13 0 13 boolalpha:std 9 1 13 0 87 108:8:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 10 1 13 0 88 119:39:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 9 1 13 0 87 123:6:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 9 1 13 0 88 124:17:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 9 1 13 0 88 129:14:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 8 1 13 0 11 getline:std 9 1 13 0 7 cin:std 21 1 13 0 18 fail:basic_ios:std 21 1 13 0 19 clear:basic_ios:std 21 1 13 0 24 ignore:basic_istream:std 31 1 13 0 18 numeric_limits:std 21 1 13 0 22 max:numeric_limits:std 20 1 13 0 14 streamsize:std 21 1 13 0 23 emplace_back:vector:std 10 1 13 0 88 149:37:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 10 1 13 0 88 149:55:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 10 1 13 0 88 149:73:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 8 1 13 0 13 operator+:std 10 1 13 0 88 155:45:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 9 1 13 0 88 156:10:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 9 1 13 0 87 157:7:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 9 1 13 0 88 158:13:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 21 1 13 0 37 operator*:__normal_iterator:__gnu_cxx 21 1 13 0 35 operator+=:basic_string:__cxx11:std 10 1 13 0 88 171:45:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 20 1 13 0 6 size_t 9 1 13 0 88 173:15:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 21 1 13 0 15 size:vector:std 10 1 13 0 88 180:29:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 10 1 13 0 88 180:45:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 10 1 13 0 88 180:62:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 9 1 13 0 87 183:7:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 9 1 13 0 88 187:11:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 21 1 13 0 35 operator[]:basic_string:__cxx11:std 10 1 13 0 88 197:38:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 10 1 13 0 88 197:62:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 9 1 13 0 87 199:7:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 9 1 13 0 87 200:7:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 9 1 13 0 87 201:7:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 9 1 13 0 88 202:11:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 9 1 13 0 88 209:12:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 9 1 13 0 88 210:15:/home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 0 0 1 0 0 0 81 /home/manjaro/Desktop/deliveries/INFT2503-CPP-PROG/delivery_three/task_4/main.cpp 1693611535